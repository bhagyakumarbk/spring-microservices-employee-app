spring.application.name=employee-app

server.port = 8081

spring.datasource.url= jdbc:postgresql://localhost:5432/postgres
spring.datasource.username= postgres
spring.datasource.password= postgres

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= create


addressservice.base.url=http://localhost:8080/address


address-app.ribbon.listofservers=http://localhost:8080/address, http://localhost:8082/address

eureka.client.service-url.defaultZone=http://localhost:5000/eureka/

server.servlet.context-path=/employee-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Resiliece4j Configuration
resilience4j.circuitbreaker.instances.addressApp.register-health-indicator=true
resilience4j.circuitbreaker.instances.addressApp.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.addressApp.sliding-window-size=5
resilience4j.circuitbreaker.instances.addressApp.failure-rate-threshold=40
resilience4j.circuitbreaker.instances.addressApp.permitted-number-of-calls-in-half-open-state=1
resilience4j.circuitbreaker.instances.addressApp.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.addressApp.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.addressApp.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.addressApp.automatic-transition-from-open-to-half-open-enabled=true


resilience4j.retry.instances.addressApp.max-attempts=5
resilience4j.retry.instances.addressApp.wait-duration=10s

resilience4j.ratelimiter.instances.addressApp.limit-for-period=10
resilience4j.ratelimiter.instances.addressApp.limit-refresh-period=10s
resilience4j.ratelimiter.instances.addressApp.timeout-duration=3s
